name: Build and test project

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.3.6f1
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Restore cache
        uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      # - name: Test play and edit mode
      #   uses: webbertakken/unity-test-runner@v1.3
      #   id: testRunner
      #   with:
      #     projectPath: ${{ matrix.projectPath }}
      #     unityVersion: ${{ matrix.unityVersion }}

      # - name: Upload test results as artifacts
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: Test results (all modes)
      #     path: ${{ steps.testRunner.outputs.artifactsPath }}

      - name: Build project
        uses: webbertakken/unity-builder@v1.1
        with:
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: src
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic

      - name: Upload build result as artifact
        uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build